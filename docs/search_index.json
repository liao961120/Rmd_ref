[
["index.html", "R Markdown Features ToDo", " R Markdown Features A Compact Reference Yongfu Liao December 11, 2018 ToDo Fix 10 "],
["00-yaml.html", "1 yaml Setup 1.1 yaml 1.2 HTML 1.3 PDF 1.4 PDF 2 1.5 PDF: header.tex 1.6 PDF: template 1.7 Bibliography", " 1 yaml Setup yaml metadata determines the output file format, looking, and any other additional customizing features of Rmarkdown files. 1.1 yaml This is the complete yaml header of this document. --- title: &quot;R Markdown Features&quot; subtitle: &quot;A Compact Reference&quot; author: &quot;[Yongfu Liao](https://liao961120.github.io/)&quot; date: &quot;`r format(Sys.Date(), &#39;%B %e, %Y&#39;)`&quot; bibliography: /home/liao/local_depend/citation/neanderthals.bib csl: /home/liao/local_depend/style_sheets/apa.csl link-citations: yes output: bookdown::html_document2: code_folding: show css: /home/liao/local_depend/style_sheets/style.css df_print: kable toc: true toc_depth: 2 toc_float: collapsed: false --- 1.2 HTML output: html_document: includes: before_body: mathjax_bm.tex css: ../style_sheets/style.css df_print: kable code_folding: hide fig_width: 7 fig_height: 6 toc: true toc_depth: 4 toc_float: true 1.3 PDF You may need to attatch an additional header.tex and set latex_engine to xelatex for PDF documents containing multibite characters (e.g. Chinese). Read more about header.txt. --- author: &quot;廖永賦\\\\thanks{組別：3 ~~ 系級：心理三 ~~ 學號：B00000000}&quot; output: pdf_document: latex_engine: xelatex includes: in_header: header.tex documentclass: article urlcolor: &quot;blue&quot; linestretch: 1.5 fontsize: 12pt geometry: a5paper, headheight=0pt, margin=0.4in linestretch: 1.5 links-as-notes: true --- Note that Latex only accepts fontsize of 10pt, 11pt, or 12pt. See this for more detail. 1.4 PDF 2 This is the yaml header for bookdown::pdf_document2 output. Using bookdown extensions have several advantages. Search ‘bookdown’ for details. --- author: &quot;廖永賦\\\\thanks{組別：3 ~~ 系級：心理三 ~~ 學號：B00000000}&quot; output: bookdown::pdf_document2: number_sections: FALSE toc: False includes: in_header: header.tex latex_engine: xelatex bookdown::html_document2: number_sections: FALSE includes: before_body: mathjax_bm.tex urlcolor: blue always_allow_html: yes linestretch: 1.5 geometry: a4paper #, headheight=0pt, margin=0.4in, landscape links-as-notes: true --- 1.5 PDF: header.tex The code below is for generating PDF documents written in (Traditional) Chinese. \\usepackage{fontspec} \\usepackage{xeCJK} \\usepackage{float} \\usepackage[section]{placeins} \\usepackage{bm} \\usepackage{multicol} % multi columns layout %%% Pandoc can only set 10, 11, 12 pt %%% %\\usepackage[fontsize=13pt]{scrextend} % Set English font % Doulos SIL \\setmainfont{Liberation Serif} %TW-Kai % AR PL KaitiM Big5 標楷體 % .PingFang TC % Noto Sans CJK TC % HanWangHeiLight % HanWangHeiHeavy \\setCJKmainfont[AutoFakeBold=2.5,AutoFakeSlant=.3]{AR PL KaitiM Big5} \\setCJKmonofont[AutoFakeBold=2.5,AutoFakeSlant=.3]{Noto Sans Mono CJK TC Regular} %中文自動換行 \\XeTeXlinebreaklocale &quot;zh&quot; %文字的彈性間距 \\XeTeXlinebreakskip = 0pt plus 1pt %設定段落之間的距離 \\setlength{\\parskip}{0.15cm} 1.6 PDF: template output: pdf_document: template: two-col.latex includes: in_header: header.tex It is possible to define custom latex template. For example, two-col.latex is created by putting the variable body (which is the rendered content of the Rmd file) inside multicols latex extension: \\begin{multicols}{2} $body$ \\end{multicols} 1.7 Bibliography bibliography: ./citation/neanderthals.bib csl: ./citation/apa.csl # APA style sheet link-citations: yes For citation syntax, read the section Bibliography &amp; Citations. "],
["01-knitr.html", "2 knitr Parameters 2.1 Root 2.2 Code Chunk &amp; Figure Options 3 Child Documents 3.1 Usage 4 Conditional Compilation 5 Dynamic Variables 6 Display Code Chunk with Code Chunk 7 Bibliographies &amp; Citations 7.1 Citation syntax 7.2 Include .bib file in Reference 8 Emphasis An Example Colored divs Bootstrap Callouts New Line Attach Attributes 9 Footnotes with Paragraphs 10 Shaped Images (HTML) Rounded Edge Circle Image Thumbnail 11 Figures 11.1 Captions", " 2 knitr Parameters 2.1 Root knitr::opts_knit$set(root.dir=&#39;..&#39;) The root directory of the .rmd file you want to knit is set to the directory where the .rmd file is located by default. In the case above, I changed it to the directory that is parent to the default directory. This is useful if you build websites with R Markdown Websites, since R Markdown Websites doesn’t allow hierarchical website structure. By changing the root directory, you can more easly organize your project directory structure without violating the requirement of R Markdown Websites. This is especially true when you source a lot of Rscripts in the .Rmd files. 2.2 Code Chunk &amp; Figure Options library(svglite) knitr::opts_chunk$set( echo = FALSE, # No display code chunks message = FALSE, warning = FALSE, dev=&#39;svg&#39;, # or &#39;svglite&#39; for multibite characters comment=&quot;&quot;, fig.dim = c(3.5, 3.5) # (width, height) ) options(digits = 2) # auto round to 2 decimals when printed 3 Child Documents It is possible to write R Markdown in separated files and combine them together before knitting to the output file. See knitr documentation for more info. 3.1 Usage main.Rmd: --- title: &quot;This is Title&quot; author: &quot;Yongfu Liao&quot; output: html_document --- ```{r setup} options(knitr.duplicate.label = &#39;allow&#39;) ``` ```{r child=&quot;part1.Rmd&quot;} ``` ```{r child=&quot;part2.Rmd&quot;} ``` The skeleton file that combines several R Markdown files. Only this file is rendered, other R Markdown files will automatically be inserted in the knitting process. To avoid code chunks having the same labels, set the option below in setup code chunk of main.Rmd. options(knitr.duplicate.label = &#39;allow&#39;) 4 Conditional Compilation if (knitr::is_html_output()) { ... } if (knitr::opts_knit$get(&#39;rmarkdown.pandoc.to&#39;) == &quot;latex&quot;) { ... } 5 Dynamic Variables Include R Code Chunk Variables in the body of text. This can be a really useful feature for writing thesis or research paper: No need to copy &amp; paste the outcomes, such as the statistics. This greatly reduce the risk of error, and it also largely boosts efficiency. Automatically updates the results in the paper when the data are updated. This also boosts efficiency and, more importantly, increases the reproducibility of the research: you can be confident that the results come directly from the data (unless there are errors in the code, which can be ‘seen’, whereas errors from copy-&amp;-paste’s are invisible). Below is a simple demonstration of this feature. tr1 &lt;- rnorm(n=25, mean=1.1) #data of treatment1 tr2 &lt;- rnorm(n=25, mean=0.9) #data of treatment2 ttest &lt;- t.test(tr1, tr2, paired = T) diff &lt;- ttest[[&quot;estimate&quot;]][[&quot;mean of the differences&quot;]] p_val &lt;- ttest[[&quot;p.value&quot;]] The mean difference between the two groups is 0.123. The mean difference between the two treatments is `r round(diff, 3)`. The p-value of the paired t-test is 0.6789, which is not significant. The *p*-value of the paired t-test is `r round(p_val, 4)`, which is `r ifelse(p_val&lt;=0.05, &quot;&quot;, &quot;not&quot;)` significant. 6 Display Code Chunk with Code Chunk Wrap the code chunk you want to display (without running the code inside) inside four ticks: ````Rmd `r ''````{r} Some R Code ``` ```` The code `r ''` is for suppressing the execution of the r code chunk after it. 7 Bibliographies &amp; Citations You can read the full documentation of Bibliographies &amp; Citations at Rstudio. 7.1 Citation syntax Classical Citation: Author, year, and brackets Some text [@citekey]. Some text (Abadia &amp; Gonzalez Morales, 2010). In-text Citation: Author (year) @citekey Some text Csikszentmihalyi (2014) Some text @citekey [p. 20] Some text. Abadia &amp; Gonzalez Morales (2010, p. 20) Some text. Year only: Suppress Author Some text [-@citekey]. Some text (2010) Two Citations Some text [@citekey1; @citekey2]. Some text (Abadia &amp; Gonzalez Morales, 2010; Csikszentmihalyi, 2014). Prefix &amp; Suffix Text [see @citekey1 pp.45; also, @citekey2 ch. 2]. Text (see Abadia &amp; Gonzalez Morales, 2010, p. 45; also, Csikszentmihalyi, 2014 ch. 2). 7.2 Include .bib file in Reference Rmarkdown requires specific formats of bibliographies. One of the most common one is .bib. A lot of people (including me) use Endnote to manage bibliographies. Read this to see how to generate .bib files from EndNote. However, you can’t control the format of the citation key generated by Endnote. Having a well-structured format of citation key greatly enhance efficiency, which can be done by using Zotero and its extension Better BibTeX. I strongly recommend using this approach, since the learning curve isn’t steep and it only hurts once. The payoff is a long-term efficiency boost. Below are some syntax in Rmarkdown to control the display of reference in the document. Reference heading The body of cited reference in the .bib file will be shown under the header named Reference (it doesn’t matter which level of heading you use). ## Reference Specific Refs Include specific references that were not cited in the body of text. --- nocite: | @item1, @item2 ... All Refs Include All references in the body of text. --- nocite: | @* ... 8 Emphasis An Example ```{block2, type=&quot;success&quot;} | This is line 1, pragraph one. [**Red text**]{.red}. Text text text text. | This is [line 2]{style=&quot;color:rgba(255, 0, 0, 1)&quot;} of paragraph one. Paragraph two starts here. ``` This is line 1, pragraph one. Red text. Text text text text. This is line 2 of paragraph one. Paragraph two starts here. Colored divs Bootstrap Alert You can use bootstrap’s default alert divs in Rmarkdown, defined with four classes: alert alert-success alert alert-warning alert alert-info alert alert-danger ```{block, type=&quot;alert alert-success&quot;} Bootstrap-defined colored region ``` Bootstrap-defined colored region Customized divs Alternative, you can define your own styled divs, as in my stylesheet1: There are 4 choices of classes, success warning info error ```{block, type=&quot;info&quot;} some text in the colored region ``` some text in the colored region Bootstrap Callouts Althougt it’s “Bootstrap” callouts, it’s not contained in default bootstrap theme. I defined it in my stylesheet. There are 4 choices of classes, bs-callout bs-callout-success bs-callout bs-callout-warning bs-callout bs-callout-info bs-callout bs-callout-error ```{block2, type=&quot;bs-callout bs-callout-warning&quot;} ### Heading in Callout **Calleout Text** texttexttexttexttexttext ``` Heading in Callout Calleout Text texttexttexttexttexttext New Line | Text of line 1 | Text of line 2 New paragraph Text of line 1 Text of line 2 New paragraph Attach Attributes By using [text], pandoc turns the text in the square brackets into the HTML &lt;span&gt; tag. HTML class, id, attributes specific to &lt;span&gt; can then be attached by using the curly braces. class Rmarkdown syntax allows attaching attributes (such as class, id, etc.) to certain elements by wrapping attributes into { ... }. Elements allowed attributes to be attach (by markdown syntax directly): Section: Attributes are added next to any level of heading. Link: [Text](LINK){attributes} span: Text wrapped in [, ]. e.g [Text with class &quot;red&quot;]{.red}. [**Red Bold text**]{.red} Red Bold text Note2. Other Attributes Add color through [span style]{style=&quot;color:rgba(255, 0, 0, 1)&quot;} Add color through span style 9 Footnotes with Paragraphs Check Pandoc for details. [^longnote]: Here&#39;s one with multiple blocks. Subsequent paragraphs are indented to show that they belong to the previous footnote. (JUST IGNORE ME, I AM Exteeeeeendiiiiiiing the text to show the effect of paragraph). In this way, multi-paragraph footnotes work like multi-paragraph list items. Read the output by clicking the superscript3. 10 Shaped Images (HTML) Rounded Edge ![](../../local_depend/icons/libreoffice.ico){width=auto height=&quot;30%&quot; .rounded} Boostrap ![](../../local_depend/icons/libreoffice.ico){width=auto height=&quot;30%&quot; .img-rounded} Bootstrap Rounded Circle Image ![](../../local_depend/icons/libreoffice.ico){width=auto height=&quot;30%&quot; .circle} This is figure Caption Boostrap ![](../../local_depend/icons/libreoffice.ico){width=auto height=&quot;30%&quot; .img-circle} Bootstrap Circle Thumbnail ![](../../local_depend/icons/libreoffice.ico){width=auto height=&quot;30%&quot; .img-thumbnail} Bootstrap Thumbnail 11 Figures 11.1 Captions Include fig.cap='An Caption of the Plot' in the code chunk option gives: ```{r fig.cap=&#39;An Caption of the Plot&#39;} library(ggplot2) ggplot(iris) + geom_point(aes(x = Sepal.Length, y = Sepal.Width, color = Species) ) ``` Figure 11.1: An Caption of the Plot References "],
["02-latex.html", "12 Some \\(\\LaTeX\\) for PDF output 13 \\(\\LaTeX\\) Math Passing Matrix Object kable Plotting Expression", " 12 Some \\(\\LaTeX\\) for PDF output \\pagenumbering{gobble} This LaTeX code suppress the page number. \\pagenumbering{arabic} ‘Turn on’ page number closed by \\pagenumbering{gobble}. \\newpage: Start a new page The 3 type of code can be useful in the situation below: --- title: &quot;A Title&quot; author: &quot;Someone&quot; date: &quot;`r format(Sys.Date(), &#39;%B %e, %Y&#39;)`&quot; --- ... Some content in the first page (title page) ... \\pagenumbering{gobble} % Suppress page number on the title page \\newpage % Start a new page ... Some content in the second page ... \\pagenumbering{arabic} % Revert suppression of page number % Now, the page num starts with &#39;2&#39; 13 \\(\\LaTeX\\) Math Passing Matrix Object Setup Add results='asis' to r code chunk option. ```{r results=&#39;asis&#39;, echo=FALSE} library(mat2tex) mt &lt;- c(1,2) &quot;$A =&quot; %_% xm(mt,0) %_%&quot;_{2 \\\\times 1}$&quot; ``` \\(A = \\begin{pmatrix} 1 \\\\ 2 \\\\ \\end{pmatrix} _{2 \\times 1}\\) Include Matrix in Text This is the variable `mt`, ```{r results=&#39;asis&#39;, echo=FALSE} library(mat2tex) mt &lt;- matrix(1:4, 2,2) &quot;$A =&quot; %_% xm(mt,0) %_%&quot;^{-1}$&quot; ``` , which is a matrix. renders as: This is the variable mt, \\(A = \\begin{pmatrix} 1 &amp; 3 \\\\ 2 &amp; 4 \\\\ \\end{pmatrix} ^{-1}\\) , which is a matrix. Check here for more information. kable library(knitr) library(dplyr) iris_data &lt;- head(iris) %&gt;% select(Sepal.Length, Sepal.Width) colnames(iris_data) &lt;- c(&quot;$\\\\alpha$&quot;, &quot;$\\\\frac{a}{b}$&quot;) kable(iris_data, format = &quot;markdown&quot;, align = &quot;c&quot;) \\(\\alpha\\) \\(\\frac{a}{b}\\) 5.1 3.5 4.9 3.0 4.7 3.2 4.6 3.1 5.0 3.6 5.4 3.9 Plotting Expression library(latex2exp) library(ggplot2) iris_data2 &lt;- iris[c(1:3, 50:53, 100:103), ] %&gt;% select(Sepal.Length, Sepal.Width, Species) iris_data2 %&gt;% ggplot() + geom_point(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) + labs(x = TeX(&quot;Length($\\\\frac{kg}{cm^2}$)&quot;), y = TeX(&quot;\\\\frac{a}{b}&quot;)) "],
["03-slide.html", "14 Xaringan (remark.js Slide) 15 Beamer Slide", " 14 Xaringan (remark.js Slide) Xaringan is a HTML presentation output format of R Markdown. Xaringan doesn’t support Pandoc markdown, but is very flexible and easy to use if having basic CSS knowledge. It also prints well on PDF (using Chrome or decktape). Read Chapter 7 of R Markdown Guide for more details. Slide Link 15 Beamer Slide Beamer slide is popular among proficient LaTeX users. However, I think Xaringan is a better option since it’s able to print to PDF properly and at the same time having the ability to use interactive HTML features4. Note: You can use (left &amp; right) arrow keys to navigate through the slides page-by-page. An automatic process can be set to render Xaringan slides, print them to PDF, and host HTML and PDF slides on GitHub Pages. See the output webpage and this .travis.yml if you want to implement it.↩ "],
["04-bookdown.html", "16 Printing Bookdown to PDF", " 16 Printing Bookdown to PDF Although bookdown nicely provides options to render the book to PDF formats, setting up things related to LaTeX can still be demanding, especially for people not familiar with LaTeX. To make bookdown nicely render elements properly to both HTML and PDF also takes some additional efforts. You have to make sure not to use pure HTML or LaTeX commands in Rmd files. One possible solution is to forget about LaTeX and use HTML compatible syntax entirely. The PDF can then be generated by using the web browser to print the web page. Currently, I found Firefox working better than Chrome in printing nicer appearance of the PDF (e.g., page break before H1 titles). To achieve this, one has to make all chapters output to one single HTML file and specify some additional CSS styles to tweak the appearance of PDF. Tweak the appearance of PDF by specifying @media print in style.css5: @media print { div.level1 { page-break-before: always;} img { display: block; } img, table, ul, ol, .code-snippet, blockquote, pre { page-break-inside: avoid; } } and include the CSS in _output.yml: bookdown::gitbook: css: style.css Then compile the book with bookdown::render_book(), the option output_options takes a list as input, which overrides the options specified in _output.yml6: bookdown::render_book( &quot;index.Rmd&quot;, output_file = &#39;single.html&#39;, output_format = &quot;bookdown::gitbook&quot;, output_options = list(split_by = &quot;none&quot;) ) "]
]
